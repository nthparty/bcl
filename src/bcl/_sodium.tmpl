"""
Load libsodium shared object file from this directory (with filepaths
constructed for compatibility with GitHub Actions), and write it to disk
at a temporary location. The libsodium binary can then be read from disk
directly and exported when the library is invoked (without depending on
linkage by the host operating system).
"""
import platform
import tempfile
from ctypes import cdll

# Read hex-encoded libsodium shared object file
sodium_bs = bytes.fromhex('{{{SODIUM_HEX}}}') # pylint: disable=line-too-long

# Determine OS type.
which_os = platform.system()

# Generate a temporary file on disk and write the libsodium binary to it.
LIB_EXT = '.pyd' if which_os == 'Windows' else '.so'
lib_path = tempfile.NamedTemporaryFile( # pylint: disable=consider-using-with
	suffix=LIB_EXT,
	delete=False
).name
sodium_tmp = open(lib_path, 'wb') # pylint: disable=consider-using-with
sodium_tmp.write(sodium_bs)

# Close temporary file to avoid multiprocess access error on Windows.
sodium_tmp.close()

# Load sodium binary from disk (for use by ``bcl.py``).
_sodium = cdll.LoadLibrary(lib_path)
